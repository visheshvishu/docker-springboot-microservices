version: '3.8'
services:

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: e_commerce
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INTERNAL://kafka:19092,PLAINTEXT_EXTERNAL://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT_INTERNAL://:19092,PLAINTEXT_EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"    # External (host machine)
      - "19092:19092"  # Internal (Docker network)

  config-server:
    container_name: config-server
    build: ./config-server
    ports:
      - "8081:8081"
    depends_on:
      - mysql
    entrypoint: /bin/sh
    command: >
      -c "echo 'Waiting 20s for dependencies...'; sleep 20; java -jar /app.jar"

  oauth2-server:
    container_name: oauth2-server
    build: oauth2-server
    expose:
      - "8082:8082"
    depends_on:
      - config-server
    entrypoint: /bin/sh
    command: >
      -c "
      while ! (nc -z config-server 8081); do sleep 5; echo 'Waiting for config-server to start-up...'; done;
      java -jar  /app.jar
      "   

  eureka-server:
    container_name: eureka-server
    build: ./eureka-server
    ports:
      - "8080:8080"
    depends_on:
      - config-server
    entrypoint: /bin/sh
    command: >
      -c "echo 'Waiting 20s for dependencies...'; sleep 20; java -jar /app.jar"

  admin-server:
    container_name: admin-server
    build: ./admin-server
    ports:
      - "8086:8086"
    depends_on:
      - eureka-server
    entrypoint: /bin/sh
    command: >
      -c "echo 'Waiting 20s for dependencies...'; sleep 20; java -jar /app.jar"

  zuul-server:
    container_name: zuul-server
    build: ./zuul-server
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
    entrypoint: /bin/sh
    command: >
      -c "echo 'Waiting 20s for dependencies...'; sleep 20; java -jar /app.jar"

  customer-service:
    container_name: customer-service
    build: ./customer-service
    ports:
      - "8085:8085"
    depends_on:
      - config-server
      - kafka
    entrypoint: /bin/sh
    command: >
      -c "
      while ! (nc -z oauth2-server 8082); do sleep 5; echo 'Waiting for oauth2-server to start-up...'; done;
      java -jar  /app.jar
      "

  order-service:
    container_name: order-service
    build: ./order-service
    ports:
      - "8084:8084"
    depends_on:
      - customer-service
    entrypoint: /bin/sh
    command: >
      -c "
      while ! (nc -z customer-service 8085); do sleep 5; echo 'Waiting for customer-service to start-up...'; done;
      java -jar  /app.jar
      "


volumes:
  mysql_data:
